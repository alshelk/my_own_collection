---
- name: Create vm in yandex cloud
  hosts: localhost
  tasks:
    - name: yc auth
      my_own_collection.yandex_cloud_elk.yc_create_vm:
        step: "auth"
        token: "{{ token }}"
    - name: yc create network
      my_own_collection.yandex_cloud_elk.yc_create_vm:
        step: "network"
        folder_id: "{{ folder_id }}"
        networkname: "learning"
        netdesc: "learning network"
        zone: "ru-central1-a"
        cidr: "10.0.1.0/24"
    - name: yc create subnetwork
      my_own_collection.yandex_cloud_elk.yc_create_vm:
        step: "subnetwork"
        folder_id: "{{ folder_id }}"
        networkname: "learning"
        subnetname: "learning-subnet"
        subdesc: "learning subnetwork"
        zone: "ru-central1-a"
        cidr: "10.0.1.0/24"
    - name: yc create vm1
      my_own_collection.yandex_cloud_elk.yc_create_vm:
        step: "vm"
        folder_id: "{{ folder_id }}"
        vm_name: "clickhouse-01"
        subnetname: "learning-subnet"
        imgfamily: "centos-7"
        disksize: "20GB"
        ram: "4GB"
        cores: "2"
        frac: "20"
        pathkey: "/home/vagrant/.ssh/id_rsa.pub"
      register: clickhouse_output
    - name: Add host to group 'clickhouse'
      ansible.builtin.add_host:
        name: clickhouse-01
        groups: clickhouse
        ansible_host: '{{ clickhouse_output.message[0].primary_v4_address.one_to_one_nat.address }}'
        ansible_user: yc-user
        primary_v4_address: '{{ clickhouse_output.message[0].primary_v4_address.address }}'
    - name: yc create vm2
      my_own_collection.yandex_cloud_elk.yc_create_vm:
        step: "vm"
        folder_id: "{{ folder_id }}"
        vm_name: "lighthouse-01"
        subnetname: "learning-subnet"
        imgfamily: "centos-7"
        disksize: "20GB"
        ram: "2GB"
        cores: "2"
        frac: "20"
        pathkey: "/home/vagrant/.ssh/id_rsa.pub"
      register: lighthouse_output
    - name: Add host to group 'lighthouse'
      ansible.builtin.add_host:
        name: lighthouse-01
        groups: lighthouse
        ansible_host: '{{ lighthouse_output.message[0].primary_v4_address.one_to_one_nat.address }}'
        ansible_user: yc-user
        primary_v4_address: '{{ lighthouse_output.message[0].primary_v4_address.address }}'
    - name: yc create vm2
      my_own_collection.yandex_cloud_elk.yc_create_vm:
        step: "vm"
        folder_id: "{{ folder_id }}"
        vm_name: "vector-01"
        subnetname: "learning-subnet"
        imgfamily: "centos-7"
        disksize: "20GB"
        ram: "2GB"
        cores: "2"
        frac: "20"
        pathkey: "/home/vagrant/.ssh/id_rsa.pub"
      register: vector_output
    - name: Add host to group 'vector'
      ansible.builtin.add_host:
        name: vector-01
        groups: vector
        ansible_host: '{{ vector_output.message[0].primary_v4_address.one_to_one_nat.address }}'
        ansible_user: yc-user
        primary_v4_address: '{{ vector_output.message[0].primary_v4_address.address }}'

- name: Install Clickhouse
  hosts: clickhouse
  gather_facts: no
  vars:
    clickhouse_listen_host_custom:
      - "{{ hostvars[ 'clickhouse-01' ].primary_v4_address }}"
    clickhouse_dbs_custom:
      - { name: logs }
  pre_tasks:
    - name: wait until clickhouse server is up
      wait_for:
        port: 22
        host: "{{ hostvars[ 'clickhouse-01' ].ansible_host }}"
        search_regex: OpenSSH
        timeout: 600
        delay: 10
      delegate_to: localhost
    - name: Gather facts for first time
      ansible.builtin.setup:
  roles:
    - role: clickhouse
  post_tasks:
    - name: Create table
      ansible.builtin.command: "clickhouse-client -q 'CREATE TABLE IF NOT EXISTS logs.local_log
        (file String, hostname String, message String, timestamp DateTime) Engine=Log;'"
      register: create_table
      failed_when: create_table.rc != 0 and create_table.rc !=57
      changed_when: create_table.rc == 0
      when: not ansible_check_mode

- name: Install Vector manual
  hosts: vector
  gather_facts: no
  vars:
    ip_clickhouse: "{{ hostvars[ 'clickhouse-01' ].primary_v4_address }}"
    vector_config:
      data_dir: /var/lib/vector
      sources:
        sample_file:
          type: file
          read_from: beginning
          ignore_older_secs: 600
          include:
            - /var/log/**/*.log
        vector_log:
          type: internal_logs
      sinks:
        to_clickhouse:
          type: clickhouse
          inputs:
            - sample_file
          endpoint: http://{{ ip_clickhouse }}:{{ port_clickhouse }}
          database: logs
          table: local_log
          skip_unknown_fields: true
          compression: gzip
          healthcheck:
            enabled: false
  collections:
    - my_own_collection.yandex_cloud_elk
  pre_tasks:
    - name: wait until vector server is up
      wait_for:
        port: 22
        host: "{{ hostvars[ 'vector-01' ].ansible_host }}"
        timeout: 600
        delay: 10
      delegate_to: localhost
    - name: Gather facts for first time
      ansible.builtin.setup:
  tasks:
    - name: import role vector
      ansible.builtin.import_role:
        name: vector-role

- name: Install lighthouse
  hosts: lighthouse
  gather_facts: no
  collections:
    - my_own_collection.yandex_cloud_elk
  pre_tasks:
    - name: wait until lighthouse server is up
      wait_for:
        port: 22
        host: "{{ hostvars[ 'lighthouse-01' ].ansible_host }}"
        timeout: 600
        delay: 10
      delegate_to: localhost
    - name: Gather facts for first time
      ansible.builtin.setup:
    - name: install git
      ansible.builtin.yum:
        name: git
        state: latest
        update_cache: yes
      become: true
  tasks:
    - name: import role nginx
      ansible.builtin.import_role:
        name: nginx-role
    - name: import role lighthouse
      ansible.builtin.import_role:
        name: lighthouse-role